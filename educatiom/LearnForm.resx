<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button4.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>